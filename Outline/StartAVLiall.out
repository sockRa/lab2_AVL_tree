
 *** Start of Tree program 
***************************************************************
***                                                         ***
***   m:   display this menu                                ***
***   t:   display the tree (2D)                            ***
***                                                         ***
***   a:   add a value to the tree                          ***
***   r:   remove a value from the tree                     ***
***   f:   find a value in the tree                         ***
***                                                         ***
***   q:   quit the program                                 ***
***                                                         ***
***************************************************************


 Enter choice =>  z 

 Enter choice =>  + 

 *** In Info Mode *** 
 Enter choice =>  t 

 *** Tree is empty 
 Enter choice =>  a 
 Enter a value:   5

 Enter choice =>  t 



   5 
 ---------------------------------------
 TREE:        nodes:  1   height: 1 
 ---------------------------------------
 inorder:     5 
 preorder:    5 
 postorer:   5 
 Treearray:  [5]
 ---------------------------------------

 Enter choice =>  a 
 Enter a value:   3

 Enter choice =>  t 



      5    


   3    *    
 ---------------------------------------
 TREE:        nodes:  2   height: 2 
 ---------------------------------------
 inorder:     3   5 
 preorder:    5   3 
 postorer:   3   5 
 Treearray:  [5] [3] [*]
 ---------------------------------------

 Enter choice =>  a 
 Enter a value:   7

 Enter choice =>  t 



      5    


   3     7    
 ---------------------------------------
 TREE:        nodes:  3   height: 2 
 ---------------------------------------
 inorder:     3   5   7 
 preorder:    5   3   7 
 postorer:   3   7   5 
 Treearray:  [5] [3] [7]
 ---------------------------------------

 Enter choice =>  a 
 Enter a value:   1

 Enter choice =>  t 



           5         


      3          7         


   1    *    *    *    
 ---------------------------------------
 TREE:        nodes:  4   height: 3 
 ---------------------------------------
 inorder:     1   3   5   7 
 preorder:    5   3   1   7 
 postorer:   1   3   7   5 
 Treearray:  [5] [3] [7] [1] [*] [*] [*]
 ---------------------------------------

 Enter choice =>  a 
 Enter a value:   4

 Enter choice =>  t 



           5         


      3          7         


   1     4    *    *    
 ---------------------------------------
 TREE:        nodes:  5   height: 3 
 ---------------------------------------
 inorder:     1   3   4   5   7 
 preorder:    5   3   1   4   7 
 postorer:   1   4   3   7   5 
 Treearray:  [5] [3] [7] [1] [4] [*] [*]
 ---------------------------------------

 Enter choice =>  a 
 Enter a value:   6

 Enter choice =>  t 



           5         


      3          7         


   1     4     6    *    
 ---------------------------------------
 TREE:        nodes:  6   height: 3 
 ---------------------------------------
 inorder:     1   3   4   5   6   7 
 preorder:    5   3   1   4   7   6 
 postorer:   1   4   3   6   7   5 
 Treearray:  [5] [3] [7] [1] [4] [6] [*]
 ---------------------------------------

 Enter choice =>  a 
 Enter a value:   8

 Enter choice =>  t 



           5         


      3          7         


   1     4     6     8    
 ---------------------------------------
 TREE:        nodes:  7   height: 3 
 ---------------------------------------
 inorder:     1   3   4   5   6   7   8 
 preorder:    5   3   1   4   7   6   8 
 postorer:   1   4   3   6   8   7   5 
 Treearray:  [5] [3] [7] [1] [4] [6] [8]
 ---------------------------------------

 Enter choice =>  q 
 *** BYE BYE! ***
 *** End of Tree program 

 *** Start of Tree program 
***************************************************************
***                                                         ***
***   m:   display this menu                                ***
***   t:   display the tree (2D)                            ***
***                                                         ***
***   a:   add a value to the tree                          ***
***   r:   remove a value from the tree                     ***
***   f:   find a value in the tree                         ***
***                                                         ***
***   q:   quit the program                                 ***
***                                                         ***
***************************************************************


 Enter choice =>  z 

 Enter choice =>  + 

 *** In Info Mode *** 
 Enter choice =>  t 

 *** Tree is empty 
 Enter choice =>  a 
 Enter a value:   5

 Enter choice =>  t 



   5 
 ---------------------------------------
 TREE:        nodes:  1   height: 1 
 ---------------------------------------
 inorder:     5 
 preorder:    5 
 postorer:   5 
 Treearray:  [5]
 ---------------------------------------

 Enter choice =>  a 
 Enter a value:   3

 Enter choice =>  t 



      5    


   3    *    
 ---------------------------------------
 TREE:        nodes:  2   height: 2 
 ---------------------------------------
 inorder:     3   5 
 preorder:    5   3 
 postorer:   3   5 
 Treearray:  [5] [3] [*]
 ---------------------------------------

 Enter choice =>  a 
 Enter a value:   7

 Enter choice =>  t 



      5    


   3     7    
 ---------------------------------------
 TREE:        nodes:  3   height: 2 
 ---------------------------------------
 inorder:     3   5   7 
 preorder:    5   3   7 
 postorer:   3   7   5 
 Treearray:  [5] [3] [7]
 ---------------------------------------

 Enter choice =>  a 
 Enter a value:   1

 Enter choice =>  t 



           5         


      3          7         


   1    *    *    *    
 ---------------------------------------
 TREE:        nodes:  4   height: 3 
 ---------------------------------------
 inorder:     1   3   5   7 
 preorder:    5   3   1   7 
 postorer:   1   3   7   5 
 Treearray:  [5] [3] [7] [1] [*] [*] [*]
 ---------------------------------------

 Enter choice =>  a 
 Enter a value:   4

 Enter choice =>  t 



           5         


      3          7         


   1     4    *    *    
 ---------------------------------------
 TREE:        nodes:  5   height: 3 
 ---------------------------------------
 inorder:     1   3   4   5   7 
 preorder:    5   3   1   4   7 
 postorer:   1   4   3   7   5 
 Treearray:  [5] [3] [7] [1] [4] [*] [*]
 ---------------------------------------

 Enter choice =>  a 
 Enter a value:   6

 Enter choice =>  t 



           5         


      3          7         


   1     4     6    *    
 ---------------------------------------
 TREE:        nodes:  6   height: 3 
 ---------------------------------------
 inorder:     1   3   4   5   6   7 
 preorder:    5   3   1   4   7   6 
 postorer:   1   4   3   6   7   5 
 Treearray:  [5] [3] [7] [1] [4] [6] [*]
 ---------------------------------------

 Enter choice =>  a 
 Enter a value:   8

 Enter choice =>  t 



           5         


      3          7         


   1     4     6     8    
 ---------------------------------------
 TREE:        nodes:  7   height: 3 
 ---------------------------------------
 inorder:     1   3   4   5   6   7   8 
 preorder:    5   3   1   4   7   6   8 
 postorer:   1   4   3   6   8   7   5 
 Treearray:  [5] [3] [7] [1] [4] [6] [8]
 ---------------------------------------

 Enter choice =>  r 
 Enter a value:   5

 Enter choice =>  t 



           6         


      3          7         


   1     4    *     8    
 ---------------------------------------
 TREE:        nodes:  6   height: 3 
 ---------------------------------------
 inorder:     1   3   4   6   7   8 
 preorder:    6   3   1   4   7   8 
 postorer:   1   4   3   8   7   6 
 Treearray:  [6] [3] [7] [1] [4] [*] [8]
 ---------------------------------------

 Enter choice =>  r 
 Enter a value:   6

 Enter choice =>  t 



           7         


      3          8         


   1     4    *    *    
 ---------------------------------------
 TREE:        nodes:  5   height: 3 
 ---------------------------------------
 inorder:     1   3   4   7   8 
 preorder:    7   3   1   4   8 
 postorer:   1   4   3   8   7 
 Treearray:  [7] [3] [8] [1] [4] [*] [*]
 ---------------------------------------

 Enter choice =>  r 
 Enter a value:   7



                     7                   


           3                    8                   


      1          4          3         *         


  *    *    *    *     1     4    *    *    
 ---------------------------------------
 TREE:        nodes:  8   height: 4 
 ---------------------------------------
 inorder:     1   3   4   7   1   3   4   8 
 preorder:    7   3   1   4   8   3   1   4 
 postorer:   1   4   3   1   4   3   8   7 
 Treearray:  [7] [3] [8] [1] [4] [3] [*] [*] [*] [*] [*] [1] [4] [*] [*]
 ---------------------------------------

 *************************************** 
 *** SRR at node  8                  *** 
 *************************************** 
 Enter choice =>  t 



      8    


   4    *    
 ---------------------------------------
 TREE:        nodes:  2   height: 2 
 ---------------------------------------
 inorder:     4   8 
 preorder:    8   4 
 postorer:   4   8 
 Treearray:  [8] [4] [*]
 ---------------------------------------

 Enter choice =>  r 
 Enter a value:   4

 Enter choice =>  t 



   8 
 ---------------------------------------
 TREE:        nodes:  1   height: 1 
 ---------------------------------------
 inorder:     8 
 preorder:    8 
 postorer:   8 
 Treearray:  [8]
 ---------------------------------------

 Enter choice =>  r 
 Enter a value:   3

 Enter choice =>  t 



   8 
 ---------------------------------------
 TREE:        nodes:  1   height: 1 
 ---------------------------------------
 inorder:     8 
 preorder:    8 
 postorer:   8 
 Treearray:  [8]
 ---------------------------------------

 Enter choice =>  r 
 Enter a value:   8

 Enter choice =>  t 

 *** Tree is empty 
 Enter choice =>  r 
 Enter a value:   1

 Enter choice =>  t 

 *** Tree is empty 
 Enter choice =>  q 
 *** BYE BYE! ***
 *** End of Tree program 

 *** Start of Tree program 
***************************************************************
***                                                         ***
***   m:   display this menu                                ***
***   t:   display the tree (2D)                            ***
***                                                         ***
***   a:   add a value to the tree                          ***
***   r:   remove a value from the tree                     ***
***   f:   find a value in the tree                         ***
***                                                         ***
***   q:   quit the program                                 ***
***                                                         ***
***************************************************************


 Enter choice =>  z 

 Enter choice =>  + 

 *** In Info Mode *** 
 Enter choice =>  t 

 *** Tree is empty 
 Enter choice =>  a 
 Enter a value:   1

 Enter choice =>  a 
 Enter a value:   2

 Enter choice =>  t 



      1    


  *     2    
 ---------------------------------------
 TREE:        nodes:  2   height: 2 
 ---------------------------------------
 inorder:     1   2 
 preorder:    1   2 
 postorer:   2   1 
 Treearray:  [1] [*] [2]
 ---------------------------------------

 Enter choice =>  a 
 Enter a value:   3



           1         


     *          2         


  *    *    *     3    
 ---------------------------------------
 TREE:        nodes:  3   height: 3 
 ---------------------------------------
 inorder:     1   2   3 
 preorder:    1   2   3 
 postorer:   3   2   1 
 Treearray:  [1] [*] [2] [*] [*] [*] [3]
 ---------------------------------------

 *************************************** 
 *** SLR at node  1                  *** 
 *************************************** 
 Enter choice =>  t 



      2    


   1     3    
 ---------------------------------------
 TREE:        nodes:  3   height: 2 
 ---------------------------------------
 inorder:     1   2   3 
 preorder:    2   1   3 
 postorer:   1   3   2 
 Treearray:  [2] [1] [3]
 ---------------------------------------

 Enter choice =>  a 
 Enter a value:   4

 Enter choice =>  t 



           2         


      1          3         


  *    *    *     4    
 ---------------------------------------
 TREE:        nodes:  4   height: 3 
 ---------------------------------------
 inorder:     1   2   3   4 
 preorder:    2   1   3   4 
 postorer:   1   4   3   2 
 Treearray:  [2] [1] [3] [*] [*] [*] [4]
 ---------------------------------------

 Enter choice =>  a 
 Enter a value:   5



                     2                   


           1                    3                   


     *         *         *          4         


  *    *    *    *    *    *    *     5    
 ---------------------------------------
 TREE:        nodes:  5   height: 4 
 ---------------------------------------
 inorder:     1   2   3   4   5 
 preorder:    2   1   3   4   5 
 postorer:   1   5   4   3   2 
 Treearray:  [2] [1] [3] [*] [*] [*] [4] [*] [*] [*] [*] [*] [*] [*] [5]
 ---------------------------------------

 *************************************** 
 *** SLR at node  3                  *** 
 *************************************** 
 Enter choice =>  t 



           2         


      1          4         


  *    *     3     5    
 ---------------------------------------
 TREE:        nodes:  5   height: 3 
 ---------------------------------------
 inorder:     1   2   3   4   5 
 preorder:    2   1   4   3   5 
 postorer:   1   3   5   4   2 
 Treearray:  [2] [1] [4] [*] [*] [3] [5]
 ---------------------------------------

 Enter choice =>  a 
 Enter a value:   6



                     2                   


           1                    4                   


     *         *          3          5         


  *    *    *    *    *    *    *     6    
 ---------------------------------------
 TREE:        nodes:  6   height: 4 
 ---------------------------------------
 inorder:     1   2   3   4   5   6 
 preorder:    2   1   4   3   5   6 
 postorer:   1   3   6   5   4   2 
 Treearray:  [2] [1] [4] [*] [*] [3] [5] [*] [*] [*] [*] [*] [*] [*] [6]
 ---------------------------------------

 *************************************** 
 *** SLR at node  2                  *** 
 *************************************** 
 Enter choice =>  t 



           4         


      2          5         


   1     3    *     6    
 ---------------------------------------
 TREE:        nodes:  6   height: 3 
 ---------------------------------------
 inorder:     1   2   3   4   5   6 
 preorder:    4   2   1   3   5   6 
 postorer:   1   3   2   6   5   4 
 Treearray:  [4] [2] [5] [1] [3] [*] [6]
 ---------------------------------------

 Enter choice =>  a 
 Enter a value:   7



                     4                   


           2                    5                   


      1          3         *          6         


  *    *    *    *    *    *    *     7    
 ---------------------------------------
 TREE:        nodes:  7   height: 4 
 ---------------------------------------
 inorder:     1   2   3   4   5   6   7 
 preorder:    4   2   1   3   5   6   7 
 postorer:   1   3   2   7   6   5   4 
 Treearray:  [4] [2] [5] [1] [3] [*] [6] [*] [*] [*] [*] [*] [*] [*] [7]
 ---------------------------------------

 *************************************** 
 *** SLR at node  5                  *** 
 *************************************** 
 Enter choice =>  t 



           4         


      2          6         


   1     3     5     7    
 ---------------------------------------
 TREE:        nodes:  7   height: 3 
 ---------------------------------------
 inorder:     1   2   3   4   5   6   7 
 preorder:    4   2   1   3   6   5   7 
 postorer:   1   3   2   5   7   6   4 
 Treearray:  [4] [2] [6] [1] [3] [5] [7]
 ---------------------------------------

 Enter choice =>  q 
 *** BYE BYE! ***
 *** End of Tree program 

 *** Start of Tree program 
***************************************************************
***                                                         ***
***   m:   display this menu                                ***
***   t:   display the tree (2D)                            ***
***                                                         ***
***   a:   add a value to the tree                          ***
***   r:   remove a value from the tree                     ***
***   f:   find a value in the tree                         ***
***                                                         ***
***   q:   quit the program                                 ***
***                                                         ***
***************************************************************


 Enter choice =>  z 

 Enter choice =>  + 

 *** In Info Mode *** 
 Enter choice =>  t 

 *** Tree is empty 
 Enter choice =>  a 
 Enter a value:   7

 Enter choice =>  a 
 Enter a value:   6

 Enter choice =>  t 



      7    


   6    *    
 ---------------------------------------
 TREE:        nodes:  2   height: 2 
 ---------------------------------------
 inorder:     6   7 
 preorder:    7   6 
 postorer:   6   7 
 Treearray:  [7] [6] [*]
 ---------------------------------------

 Enter choice =>  a 
 Enter a value:   5



           7         


      6         *         


   5    *    *    *    
 ---------------------------------------
 TREE:        nodes:  3   height: 3 
 ---------------------------------------
 inorder:     5   6   7 
 preorder:    7   6   5 
 postorer:   5   6   7 
 Treearray:  [7] [6] [*] [5] [*] [*] [*]
 ---------------------------------------

 *************************************** 
 *** SRR at node  7                  *** 
 *************************************** 
 Enter choice =>  t 



      6    


   5     7    
 ---------------------------------------
 TREE:        nodes:  3   height: 2 
 ---------------------------------------
 inorder:     5   6   7 
 preorder:    6   5   7 
 postorer:   5   7   6 
 Treearray:  [6] [5] [7]
 ---------------------------------------

 Enter choice =>  a 
 Enter a value:   4

 Enter choice =>  t 



           6         


      5          7         


   4    *    *    *    
 ---------------------------------------
 TREE:        nodes:  4   height: 3 
 ---------------------------------------
 inorder:     4   5   6   7 
 preorder:    6   5   4   7 
 postorer:   4   5   7   6 
 Treearray:  [6] [5] [7] [4] [*] [*] [*]
 ---------------------------------------

 Enter choice =>  a 
 Enter a value:   3



                     6                   


           5                    7                   


      4         *         *         *         


   3    *    *    *    *    *    *    *    
 ---------------------------------------
 TREE:        nodes:  5   height: 4 
 ---------------------------------------
 inorder:     3   4   5   6   7 
 preorder:    6   5   4   3   7 
 postorer:   3   4   5   7   6 
 Treearray:  [6] [5] [7] [4] [*] [*] [*] [3] [*] [*] [*] [*] [*] [*] [*]
 ---------------------------------------

 *************************************** 
 *** SRR at node  5                  *** 
 *************************************** 
 Enter choice =>  t 



           6         


      4          7         


   3     5    *    *    
 ---------------------------------------
 TREE:        nodes:  5   height: 3 
 ---------------------------------------
 inorder:     3   4   5   6   7 
 preorder:    6   4   3   5   7 
 postorer:   3   5   4   7   6 
 Treearray:  [6] [4] [7] [3] [5] [*] [*]
 ---------------------------------------

 Enter choice =>  a 
 Enter a value:   2



                     6                   


           4                    7                   


      3          5         *         *         


   2    *    *    *    *    *    *    *    
 ---------------------------------------
 TREE:        nodes:  6   height: 4 
 ---------------------------------------
 inorder:     2   3   4   5   6   7 
 preorder:    6   4   3   2   5   7 
 postorer:   2   3   5   4   7   6 
 Treearray:  [6] [4] [7] [3] [5] [*] [*] [2] [*] [*] [*] [*] [*] [*] [*]
 ---------------------------------------

 *************************************** 
 *** SRR at node  6                  *** 
 *************************************** 
 Enter choice =>  t 



           4         


      3          6         


   2    *     5     7    
 ---------------------------------------
 TREE:        nodes:  6   height: 3 
 ---------------------------------------
 inorder:     2   3   4   5   6   7 
 preorder:    4   3   2   6   5   7 
 postorer:   2   3   5   7   6   4 
 Treearray:  [4] [3] [6] [2] [*] [5] [7]
 ---------------------------------------

 Enter choice =>  a 
 Enter a value:   1



                     4                   


           3                    6                   


      2         *          5          7         


   1    *    *    *    *    *    *    *    
 ---------------------------------------
 TREE:        nodes:  7   height: 4 
 ---------------------------------------
 inorder:     1   2   3   4   5   6   7 
 preorder:    4   3   2   1   6   5   7 
 postorer:   1   2   3   5   7   6   4 
 Treearray:  [4] [3] [6] [2] [*] [5] [7] [1] [*] [*] [*] [*] [*] [*] [*]
 ---------------------------------------

 *************************************** 
 *** SRR at node  3                  *** 
 *************************************** 
 Enter choice =>  t 



           4         


      2          6         


   1     3     5     7    
 ---------------------------------------
 TREE:        nodes:  7   height: 3 
 ---------------------------------------
 inorder:     1   2   3   4   5   6   7 
 preorder:    4   2   1   3   6   5   7 
 postorer:   1   3   2   5   7   6   4 
 Treearray:  [4] [2] [6] [1] [3] [5] [7]
 ---------------------------------------

 Enter choice =>  q 
 *** BYE BYE! ***
 *** End of Tree program 

 *** Start of Tree program 
***************************************************************
***                                                         ***
***   m:   display this menu                                ***
***   t:   display the tree (2D)                            ***
***                                                         ***
***   a:   add a value to the tree                          ***
***   r:   remove a value from the tree                     ***
***   f:   find a value in the tree                         ***
***                                                         ***
***   q:   quit the program                                 ***
***                                                         ***
***************************************************************


 Enter choice =>  z 

 Enter choice =>  + 

 *** In Info Mode *** 
 Enter choice =>  t 

 *** Tree is empty 
 Enter choice =>  a 
 Enter a value:   9

 Enter choice =>  t 



   9 
 ---------------------------------------
 TREE:        nodes:  1   height: 1 
 ---------------------------------------
 inorder:     9 
 preorder:    9 
 postorer:   9 
 Treearray:  [9]
 ---------------------------------------

 Enter choice =>  a 
 Enter a value:   10

 Enter choice =>  t 



      9    


  *    10    
 ---------------------------------------
 TREE:        nodes:  2   height: 2 
 ---------------------------------------
 inorder:     9  10 
 preorder:    9  10 
 postorer:  10   9 
 Treearray:  [9] [*] [10]
 ---------------------------------------

 Enter choice =>  a 
 Enter a value:   11



           9         


     *         10         


  *    *    *    11    
 ---------------------------------------
 TREE:        nodes:  3   height: 3 
 ---------------------------------------
 inorder:     9  10  11 
 preorder:    9  10  11 
 postorer:  11  10   9 
 Treearray:  [9] [*] [10] [*] [*] [*] [11]
 ---------------------------------------

 *************************************** 
 *** SLR at node  9                  *** 
 *************************************** 
 Enter choice =>  t 



     10    


   9    11    
 ---------------------------------------
 TREE:        nodes:  3   height: 2 
 ---------------------------------------
 inorder:     9  10  11 
 preorder:   10   9  11 
 postorer:   9  11  10 
 Treearray:  [10] [9] [11]
 ---------------------------------------

 Enter choice =>  q 
 *** BYE BYE! ***
 *** End of Tree program 

 *** Start of Tree program 
***************************************************************
***                                                         ***
***   m:   display this menu                                ***
***   t:   display the tree (2D)                            ***
***                                                         ***
***   a:   add a value to the tree                          ***
***   r:   remove a value from the tree                     ***
***   f:   find a value in the tree                         ***
***                                                         ***
***   q:   quit the program                                 ***
***                                                         ***
***************************************************************


 Enter choice =>  z 

 Enter choice =>  + 

 *** In Info Mode *** 
 Enter choice =>  t 

 *** Tree is empty 
 Enter choice =>  a 
 Enter a value:   10

 Enter choice =>  t 



  10 
 ---------------------------------------
 TREE:        nodes:  1   height: 1 
 ---------------------------------------
 inorder:    10 
 preorder:   10 
 postorer:  10 
 Treearray:  [10]
 ---------------------------------------

 Enter choice =>  a 
 Enter a value:   9

 Enter choice =>  t 



     10    


   9    *    
 ---------------------------------------
 TREE:        nodes:  2   height: 2 
 ---------------------------------------
 inorder:     9  10 
 preorder:   10   9 
 postorer:   9  10 
 Treearray:  [10] [9] [*]
 ---------------------------------------

 Enter choice =>  a 
 Enter a value:   12

 Enter choice =>  t 



     10    


   9    12    
 ---------------------------------------
 TREE:        nodes:  3   height: 2 
 ---------------------------------------
 inorder:     9  10  12 
 preorder:   10   9  12 
 postorer:   9  12  10 
 Treearray:  [10] [9] [12]
 ---------------------------------------

 Enter choice =>  a 
 Enter a value:   11

 Enter choice =>  t 



          10         


      9         12         


  *    *    11    *    
 ---------------------------------------
 TREE:        nodes:  4   height: 3 
 ---------------------------------------
 inorder:     9  10  11  12 
 preorder:   10   9  12  11 
 postorer:   9  11  12  10 
 Treearray:  [10] [9] [12] [*] [*] [11] [*]
 ---------------------------------------

 Enter choice =>  a 
 Enter a value:   13

 Enter choice =>  t 



          10         


      9         12         


  *    *    11    13    
 ---------------------------------------
 TREE:        nodes:  5   height: 3 
 ---------------------------------------
 inorder:     9  10  11  12  13 
 preorder:   10   9  12  11  13 
 postorer:   9  11  13  12  10 
 Treearray:  [10] [9] [12] [*] [*] [11] [13]
 ---------------------------------------

 Enter choice =>  r 
 Enter a value:   9



          10         


     *         12         


  *    *    11    13    
 ---------------------------------------
 TREE:        nodes:  4   height: 3 
 ---------------------------------------
 inorder:    10  11  12  13 
 preorder:   10  12  11  13 
 postorer:  11  13  12  10 
 Treearray:  [10] [*] [12] [*] [*] [11] [13]
 ---------------------------------------

 *************************************** 
 *** SLR at node 10                  *** 
 *************************************** 
 Enter choice =>  t 



     10    


  *    11    
 ---------------------------------------
 TREE:        nodes:  2   height: 2 
 ---------------------------------------
 inorder:    10  11 
 preorder:   10  11 
 postorer:  11  10 
 Treearray:  [10] [*] [11]
 ---------------------------------------

 Enter choice =>  q 
 *** BYE BYE! ***
 *** End of Tree program 

 *** Start of Tree program 
***************************************************************
***                                                         ***
***   m:   display this menu                                ***
***   t:   display the tree (2D)                            ***
***                                                         ***
***   a:   add a value to the tree                          ***
***   r:   remove a value from the tree                     ***
***   f:   find a value in the tree                         ***
***                                                         ***
***   q:   quit the program                                 ***
***                                                         ***
***************************************************************


 Enter choice =>  z 

 Enter choice =>  + 

 *** In Info Mode *** 
 Enter choice =>  t 

 *** Tree is empty 
 Enter choice =>  a 
 Enter a value:   9

 Enter choice =>  a 
 Enter a value:   11

 Enter choice =>  t 



      9    


  *    11    
 ---------------------------------------
 TREE:        nodes:  2   height: 2 
 ---------------------------------------
 inorder:     9  11 
 preorder:    9  11 
 postorer:  11   9 
 Treearray:  [9] [*] [11]
 ---------------------------------------

 Enter choice =>  a 
 Enter a value:   10

 *************************************** 
 *** DLR(T) is SRR(RC(T)) + SLR(T)   *** 
 *************************************** 
 *** DLR at node  9 is               *** 
 *** SRR at node 11 + SLR at node  9 *** 
 *************************************** 


           9         


     *         11         


  *    *    10    *    
 ---------------------------------------
 TREE:        nodes:  3   height: 3 
 ---------------------------------------
 inorder:     9  10  11 
 preorder:    9  11  10 
 postorer:  10  11   9 
 Treearray:  [9] [*] [11] [*] [*] [10] [*]
 ---------------------------------------

 *************************************** 
 *** SRR at node 11                  *** 
 *************************************** 


           9         


     *         10         


  *    *    *    11    
 ---------------------------------------
 TREE:        nodes:  3   height: 3 
 ---------------------------------------
 inorder:     9  10  11 
 preorder:    9  10  11 
 postorer:  11  10   9 
 Treearray:  [9] [*] [10] [*] [*] [*] [11]
 ---------------------------------------

 *************************************** 
 *** SLR at node  9                  *** 
 *************************************** 
 Enter choice =>  t 



     10    


   9    11    
 ---------------------------------------
 TREE:        nodes:  3   height: 2 
 ---------------------------------------
 inorder:     9  10  11 
 preorder:   10   9  11 
 postorer:   9  11  10 
 Treearray:  [10] [9] [11]
 ---------------------------------------

 Enter choice =>  q 
 *** BYE BYE! ***
 *** End of Tree program 

 *** Start of Tree program 
***************************************************************
***                                                         ***
***   m:   display this menu                                ***
***   t:   display the tree (2D)                            ***
***                                                         ***
***   a:   add a value to the tree                          ***
***   r:   remove a value from the tree                     ***
***   f:   find a value in the tree                         ***
***                                                         ***
***   q:   quit the program                                 ***
***                                                         ***
***************************************************************


 Enter choice =>  z 

 Enter choice =>  + 

 *** In Info Mode *** 
 Enter choice =>  t 

 *** Tree is empty 
 Enter choice =>  a 
 Enter a value:   9

 Enter choice =>  a 
 Enter a value:   7

 Enter choice =>  t 



      9    


   7    *    
 ---------------------------------------
 TREE:        nodes:  2   height: 2 
 ---------------------------------------
 inorder:     7   9 
 preorder:    9   7 
 postorer:   7   9 
 Treearray:  [9] [7] [*]
 ---------------------------------------

 Enter choice =>  a 
 Enter a value:   8

 *************************************** 
 *** DRR(T) is SLR(LC(T)) + SRR(T)   *** 
 *************************************** 
 *** DRR at node  9 is               *** 
 *** SLR at node  7 + SRR at node  9 *** 
 *************************************** 


           9         


      7         *         


  *     8    *    *    
 ---------------------------------------
 TREE:        nodes:  3   height: 3 
 ---------------------------------------
 inorder:     7   8   9 
 preorder:    9   7   8 
 postorer:   8   7   9 
 Treearray:  [9] [7] [*] [*] [8] [*] [*]
 ---------------------------------------

 *************************************** 
 *** SLR at node  7                  *** 
 *************************************** 


           9         


      8         *         


   7    *    *    *    
 ---------------------------------------
 TREE:        nodes:  3   height: 3 
 ---------------------------------------
 inorder:     7   8   9 
 preorder:    9   8   7 
 postorer:   7   8   9 
 Treearray:  [9] [8] [*] [7] [*] [*] [*]
 ---------------------------------------

 *************************************** 
 *** SRR at node  9                  *** 
 *************************************** 
 Enter choice =>  t 



      8    


   7     9    
 ---------------------------------------
 TREE:        nodes:  3   height: 2 
 ---------------------------------------
 inorder:     7   8   9 
 preorder:    8   7   9 
 postorer:   7   9   8 
 Treearray:  [8] [7] [9]
 ---------------------------------------

 Enter choice =>  q 
 *** BYE BYE! ***
 *** End of Tree program 

 *** Start of Tree program 
***************************************************************
***                                                         ***
***   m:   display this menu                                ***
***   t:   display the tree (2D)                            ***
***                                                         ***
***   a:   add a value to the tree                          ***
***   r:   remove a value from the tree                     ***
***   f:   find a value in the tree                         ***
***                                                         ***
***   q:   quit the program                                 ***
***                                                         ***
***************************************************************


 Enter choice =>  z 

 Enter choice =>  + 

 *** In Info Mode *** 
 Enter choice =>  t 

 *** Tree is empty 
 Enter choice =>  a 
 Enter a value:   50

 Enter choice =>  t 



  50 
 ---------------------------------------
 TREE:        nodes:  1   height: 1 
 ---------------------------------------
 inorder:    50 
 preorder:   50 
 postorer:  50 
 Treearray:  [50]
 ---------------------------------------

 Enter choice =>  a 
 Enter a value:   38

 Enter choice =>  t 



     50    


  38    *    
 ---------------------------------------
 TREE:        nodes:  2   height: 2 
 ---------------------------------------
 inorder:    38  50 
 preorder:   50  38 
 postorer:  38  50 
 Treearray:  [50] [38] [*]
 ---------------------------------------

 Enter choice =>  a 
 Enter a value:   55

 Enter choice =>  t 



     50    


  38    55    
 ---------------------------------------
 TREE:        nodes:  3   height: 2 
 ---------------------------------------
 inorder:    38  50  55 
 preorder:   50  38  55 
 postorer:  38  55  50 
 Treearray:  [50] [38] [55]
 ---------------------------------------

 Enter choice =>  a 
 Enter a value:   30

 Enter choice =>  t 



          50         


     38         55         


  30    *    *    *    
 ---------------------------------------
 TREE:        nodes:  4   height: 3 
 ---------------------------------------
 inorder:    30  38  50  55 
 preorder:   50  38  30  55 
 postorer:  30  38  55  50 
 Treearray:  [50] [38] [55] [30] [*] [*] [*]
 ---------------------------------------

 Enter choice =>  a 
 Enter a value:   40

 Enter choice =>  t 



          50         


     38         55         


  30    40    *    *    
 ---------------------------------------
 TREE:        nodes:  5   height: 3 
 ---------------------------------------
 inorder:    30  38  40  50  55 
 preorder:   50  38  30  40  55 
 postorer:  30  40  38  55  50 
 Treearray:  [50] [38] [55] [30] [40] [*] [*]
 ---------------------------------------

 Enter choice =>  a 
 Enter a value:   60

 Enter choice =>  t 



          50         


     38         55         


  30    40    *    60    
 ---------------------------------------
 TREE:        nodes:  6   height: 3 
 ---------------------------------------
 inorder:    30  38  40  50  55  60 
 preorder:   50  38  30  40  55  60 
 postorer:  30  40  38  60  55  50 
 Treearray:  [50] [38] [55] [30] [40] [*] [60]
 ---------------------------------------

 Enter choice =>  a 
 Enter a value:   45

 Enter choice =>  t 



                    50                   


          38                   55                   


     30         40         *         60         


  *    *    *    45    *    *    *    *    
 ---------------------------------------
 TREE:        nodes:  7   height: 4 
 ---------------------------------------
 inorder:    30  38  40  45  50  55  60 
 preorder:   50  38  30  40  45  55  60 
 postorer:  30  45  40  38  60  55  50 
 Treearray:  [50] [38] [55] [30] [40] [*] [60] [*] [*] [*] [45] [*] [*] [*] [*]
 ---------------------------------------

 Enter choice =>  r 
 Enter a value:   60

 Enter choice =>  t 



                    50                   


          38                   55                   


     30         40         *         *         


  *    *    *    45    *    *    *    *    
 ---------------------------------------
 TREE:        nodes:  6   height: 4 
 ---------------------------------------
 inorder:    30  38  40  45  50  55 
 preorder:   50  38  30  40  45  55 
 postorer:  30  45  40  38  55  50 
 Treearray:  [50] [38] [55] [30] [40] [*] [*] [*] [*] [*] [45] [*] [*] [*] [*]
 ---------------------------------------

 Enter choice =>  q 
 *** BYE BYE! ***
 *** End of Tree program 
